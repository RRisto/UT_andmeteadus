coord_flip()+
theme_minimal()
ggplot(junn, aes(x=nimi, y=pc1_data1, colour=fraktsioon))+
geom_point(size=3)+
coord_flip()+
theme_minimal()+
facet_wrap(~fraktsioon)
View(data_order)
ggplot(junn, aes(x=nimi, y=pc1_data1, colour=fraktsioon))+
geom_point(size=3)+
coord_flip()+
facet_wrap(~fraktsioon)+
theme_minimal()
ggplot(junn, aes(x=nimi, y=pc1_data1, colour=fraktsioon))+
geom_point(size=3)+
#coord_flip()+
facet_wrap(~fraktsioon)+
theme_minimal()
ggplot(junn, aes(x=nimi, y=pc1_data1, colour=fraktsioon))+
geom_point(size=3)+
coord_flip()+
facet_wrap(~fraktsioon)+
theme_minimal()
ggplot(junn, aes(x=nimi,  colour=fraktsioon))+
geom_point(aes(y=pc1_data1),size=3)+
coord_flip()+
facet_wrap(~fraktsioon)+
theme_minimal()
ggplot(junn, aes(x=nimi,  colour=fraktsioon))+
geom_point(aes(y=pc1_data1),size=3)+
coord_flip()+
facet_wrap(~fraktsioon, scales="free")+
theme_minimal()
ggplot(junn, aes(x=nimi,  colour=fraktsioon))+
geom_point(aes(y=pc1_data1),size=3)+
coord_flip()+
#facet_wrap(~fraktsioon)+
facet_grid(nimi ~ fraktsioon, scales="free", space="free")+
theme_minimal()
ggplot(junn, aes(x=nimi,  colour=fraktsioon))+
geom_point(aes(y=pc1_data1),size=3)+
coord_flip()+
#facet_wrap(~fraktsioon)+
facet_grid(.~ fraktsioon, scales="free", space="free")+
theme_minimal()
ggplot(junn, aes(x=nimi,  colour=fraktsioon))+
geom_point(aes(y=pc1_data1),size=3)+
coord_flip()+
#facet_wrap(~fraktsioon)+
facet_grid(.~ fraktsioon, scales="free")+
theme_minimal()
ggplot(junn, aes(x=nimi,  colour=fraktsioon))+
geom_point(aes(y=pc1_data1),size=3)+
coord_flip()+
#facet_wrap(~fraktsioon)+
facet_grid(.~ fraktsioon,  space="free")+
theme_minimal()
ggplot(junn, aes(x=nimi,  colour=fraktsioon))+
geom_point(aes(y=pc1_data1),size=3)+
coord_flip()+
#facet_wrap(~fraktsioon)+
facet_grid(.~ fraktsioon,  scales="free_x")+
theme_minimal()
ggplot(junn, aes(x=nimi,  colour=fraktsioon))+
geom_point(aes(y=pc1_data1),size=3)+
coord_flip()+
#facet_wrap(~fraktsioon)+
facet_grid(.~ fraktsioon,  scales="free_x", scales="free_y")+
theme_minimal()
ggplot(junn, aes(x=nimi,  colour=fraktsioon))+
geom_point(aes(y=pc1_data1),size=3)+
coord_flip()+
#facet_wrap(~fraktsioon)+
facet_grid(.~ fraktsioon,  scales="free_y")+
theme_minimal()
ggplot(junn, aes(x=nimi,  colour=fraktsioon))+
geom_point(aes(y=pc1_data1),size=3)+
coord_flip()+
#facet_wrap(~fraktsioon)+
facet_grid(.~ fraktsioon,  scales="free_x")+
theme_minimal()
ggplot(junn, aes(x=nimi,  colour=fraktsioon))+
geom_point(aes(y=pc1_data1),size=3)+
coord_flip()+
facet_wrap(~fraktsioon,scales="free_x")+
#facet_grid(.~ fraktsioon,  scales="free_x")+
theme_minimal()
ggplot(junn, aes(x=nimi,  colour=fraktsioon))+
geom_point(aes(y=pc1_data1),size=3)+
#coord_flip()+
facet_wrap(~fraktsioon,scales="free_x")+
#facet_grid(.~ fraktsioon,  scales="free_x")+
theme_minimal()
ggplot(junn, aes(x=pc1_data1,  colour=fraktsioon))+
geom_point(aes(y=nimi),size=3)+
#coord_flip()+
facet_wrap(~fraktsioon,scales="free_x")+
#facet_grid(.~ fraktsioon,  scales="free_x")+
theme_minimal()
ggplot(junn, aes(x=pc1_data1,  colour=fraktsioon))+
geom_point(aes(y=nimi),size=3)+
#coord_flip()+
facet_wrap(~fraktsioon,scales="free_y")+
#facet_grid(.~ fraktsioon,  scales="free_x")+
theme_minimal()
vahetajad=subset(data, nimi %in% c("Aivar Riisalu", "Deniss Boroditš",
"Inara Luigas", "Kalle Laanet",
"Lembit Kaljuvee", "Olga Sõtnik",
"Rainer Vakra"))
View(vahetajad)
pheatmap(vahetajad[, 3:1847], cluster_rows=FALSE, cluster_cols=FALSE)
vahetajad_kesk=subset(data, nimi %in% c("Aivar Riisalu", "Deniss Boroditš",
"Inara Luigas", "Kalle Laanet",
"Lembit Kaljuvee", "Olga Sõtnik",
"Rainer Vakra"))
vahetajad_kesk=subset(data, nimi %in% c("Aivar Riisalu", "Deniss Boroditš",
"Inara Luigas", "Kalle Laanet",
"Lembit Kaljuvee", "Olga Sõtnik",
"Rainer Vakra")
|fraktsioon=="Eesti Keskerakonna fraktsioon")
View(vahetajad_kesk)
pheatmap(vahetajad_kesk[, 3:1847], cluster_rows=FALSE, cluster_cols=FALSE)
vahet_nimed_kesk=c("Aivar Riisalu", "Deniss Boroditš",
"Inara Luigas", "Kalle Laanet",
"Lembit Kaljuvee", "Olga Sõtnik",
"Rainer Vakra")
vahetajad_kesk=subset(data, nimi %in% vahet_nimed_kesk
|fraktsioon=="Eesti Keskerakonna fraktsioon")
which(vahetajad_kesk$nimi%in%vahet_nimed_kesk)
View(vahetajad_kesk)
gaps=which(vahetajad_kesk$nimi%in%vahet_nimed_kesk)
pheatmap(vahetajad_kesk[, 3:1847], cluster_rows=FALSE, cluster_cols=FALSE,
gaps_row = gaps)
pheatmap(vahetajad_kesk[, 1000:1847], cluster_rows=FALSE, cluster_cols=FALSE,
gaps_row = gaps)
pheatmap(vahetajad_kesk[2, 1000:1847], cluster_rows=FALSE, cluster_cols=FALSE,
gaps_row = gaps)
pheatmap(vahetajad_kesk[2:3, 1000:1847], cluster_rows=FALSE, cluster_cols=FALSE,
gaps_row = gaps)
pheatmap(vahetajad_kesk[2:3, 1000:1847], cluster_rows=FALSE, cluster_cols=FALSE)
pheatmap(vahetajad_kesk[2:3, 3:1847], cluster_rows=FALSE, cluster_cols=FALSE)
summary(pca)
summary(pca)[1]
print(pca)
junn=as.data.frame(summary(pca))
junn=as.data.frame(pca)
data <- apply(andmed, 2, function(x) {x <- recode(x,"'vastu'=-1; 'poolt'=1; NA=0;
'puudub'=0; 'erapooletu'=0;
'ei hääletanud'=0"); x})
library(car)
data <- apply(andmed, 2, function(x) {x <- recode(x,"'vastu'=-1; 'poolt'=1; NA=0;
'puudub'=0; 'erapooletu'=0;
'ei hääletanud'=0"); x})
data_numeric <- apply(data[, 3:1847], 2, function(x) {x <- as.numeric(x); x})
data[,3:1847]=data_numeric
data=as.data.frame(data)
data_order=data[order(data$fraktsioon),]
library(pheatmap)
pheatmap(data_order[, 3:1847], cluster_rows=FALSE, cluster_cols=FALSE)
View(data)
data[3:4, 4:5]
class(data[3, 5])
data_numeric <- apply(data[, 3:1847], 2, function(x) {x <- as.numeric(x); x})
class(data[3, 5])
class(data_numeric[3, 5])
library(pheatmap)
pheatmap(data_order[, 3:1847], cluster_rows=FALSE, cluster_cols=FALSE)
data=as.data.frame(data)
data <- apply(data[, 3:1847], 2, function(x) {x <- as.numeric(x); x})
data_order=data[order(data$fraktsioon),]
library(pheatmap)
pheatmap(data_order[, 3:1847], cluster_rows=FALSE, cluster_cols=FALSE)
data=as.data.frame(data)
pheatmap(data_order[, 3:1847], cluster_rows=FALSE, cluster_cols=FALSE)
data <- apply(andmed, 2, function(x) {x <- recode(x,"'vastu'=-1; 'poolt'=1; NA=0;
'puudub'=0; 'erapooletu'=0;
'ei hääletanud'=0"); x})
#teeme numericuks
data_numeric <- apply(data[, 3:1847], 2, function(x) {x <- as.numeric(x); x})
data[,3:1847]=data_numeric
data=as.data.frame(data)
class(data[3, 5])
data=as.data.frame(data)
data=data.frame(data)
class(data[3, 5])
data_numeric <- apply(data[, 3:1847], 2, function(x) {x <- as.numeric(x); x})
data[,3:1847]=data_numeric
data_order=data[order(data$fraktsioon),]
pheatmap(data_order[, 3:1847], cluster_rows=FALSE, cluster_cols=FALSE)
View(data_order)
ggplot(junn, aes(x=pc1_data1,  colour=fraktsioon))+
geom_point(aes(y=nimi),size=3)+
#coord_flip()+
facet_wrap(~fraktsioon,scales="free_y")+
#facet_grid(.~ fraktsioon,  scales="free_x")+
theme_minimal()
library(ggplot2)
ggplot(junn, aes(x=pc1_data1,  colour=fraktsioon))+
geom_point(aes(y=nimi),size=3)+
#coord_flip()+
facet_wrap(~fraktsioon,scales="free_y")+
#facet_grid(.~ fraktsioon,  scales="free_x")+
theme_minimal()
library(pheatmap)
pheatmap(data_order[, 3:1847], cluster_rows=T, cluster_cols=T)
binoom=read.csv("./data/kodutoo_binoom_regressioon.csv")
View(binoom)
library(dplyr)
log(10)
binoom=read.csv("./data/kodutoo_binoom_regressioon.csv")
View(binoom)
binoom %>%
#select(Distance, AirTime) %>%
mutate(y = (exp(b_null+b_yks*x))/(1+exp(exp(b_null+b_yks*x))))
library(ggplot2)
binoom2=binoom %>%
mutate(y = (exp(b_null+b_yks*x))/(1+exp(exp(b_null+b_yks*x))))
ggplot(binoom2, aes(x=x, y=y))+
geom_point()
binoom=read.csv("./data/kodutoo_binoom_regressioon.csv")
#arvutame y-d
library(dplyr)
binoom2=binoom %>%
mutate(y = (exp(b_null+b_yks*x))/(1+exp(exp(b_null+b_yks*x))))
ggplot(binoom2, aes(x=x, y=y))+
geom_point()
binoom=read.csv("./data/kodutoo_binoom_regressioon.csv")
#arvutame y-d
library(dplyr)
binoom2=binoom %>%
mutate(y = (exp(b_null+b_yks*x))/(1+exp(exp(b_null+b_yks*x))))
library(ggplot2)
ggplot(binoom2, aes(x=x, y=y))+
geom_point()
ggplot(binoom2, aes(x=x, y=y))+
geom_point()+
geom_line()
ggplot(binoom2, aes(x=x, y=y))+
geom_point()+
geom_line()+
facet_wrap(~grupp)
binoom=read.csv("./data/kodutoo_binoom_regressioon.csv")
#arvutame y-d
library(dplyr)
binoom2=binoom %>%
mutate(y = (exp(b_null+b_yks*x))/(1+exp(exp(b_null+b_yks*x))))
library(ggplot2)
ggplot(binoom2, aes(x=x, y=y))+
geom_point()+
geom_line()+
facet_wrap(~grupp)
ggplot(binoom2, aes(x=x, y=y, colour=grupp))+
geom_point()+
geom_line()
exp(1)
binoom=read.csv("./data/kodutoo_binoom_regressioon.csv")
#arvutame y-d
library(dplyr)
binoom2=binoom %>%
mutate(y = (exp(b_null+b_yks*x))/(1+exp(exp(b_null+b_yks*x))))
library(ggplot2)
ggplot(binoom2, aes(x=x, y=y, colour=grupp))+
geom_point()+
geom_line()
View(binoom)
View(binoom2)
binoom=read.csv("./data/kodutoo_binoom_regressioon.csv")
#arvutame y-d
library(dplyr)
binoom2=binoom %>%
mutate(y = (exp(b_null+b_yks*x))/(1+exp(exp(b_null+b_yks*x))))
library(ggplot2)
ggplot(binoom2, aes(x=x, y=y, colour=grupp))+
geom_point()+
geom_line()
ggplot(binoom2, aes(x=x, y=y, colour=grupp))+
geom_point()+
geom_line()+
facet_wrap(~grupp)
binoom=read.csv("./data/kodutoo_binoom_regressioon.csv")
#arvutame y-d
library(dplyr)
binoom2=binoom %>%
mutate(y = (exp(b_null+b_yks*x))/(1+exp(exp(b_null+b_yks*x))))
ggplot(binoom2, aes(x=x, y=y, colour=grupp))+
geom_point()+
geom_line()+
facet_wrap(~grupp)
ggplot(binoom2, aes(x=x, y=y))+
geom_point()+
geom_line()+
facet_wrap(~nimi2)
prcomp(andmed[1:3,1])
View(andmed)
prcomp(data[1:3,3])
prcomp(data[1:3,3:4])
x <- c(1,3,6,8,9,10,15,12,17)
y <- c(10,14,12,17,19,20,20,24,19)
m <- cbind(x, y)
x1 <- x - mean(x)
y1 <- y - mean(y)
plot(x1, y1, xlim=c(-40, 40), ylim=c(-40, 20))
m1 <- cbind(x1, y1)
#kovariatsioon
cM <- cov(m1)
cM
sd(cM$x1)
sd(m1$x1)
m1
m1=as.data.frame(m1)
sd(m1$x1)
sd(m1$y1)
cor(m1$x1, m1$y1)
cM
x1 <- x - mean(x)
y1 <- y - mean(y)
plot(x1, y1, xlim=c(-40, 40), ylim=c(-40, 20))
m1 <- cbind(x1, y1)
#kovariatsioon
cM <- cov(m1)
lines(x=c(0, cM[1,1]), y=c(0, cM[2,1]), col="blue")
lines(x=c(0, cM[1,2]), y=c(0, cM[2,2]), col="blue")
#cov(x, y) ei saa kunagi olla suurem kui cov(x, x), üks joontest graafikul on
#alati üleval pool diagonaali ning teine allpool. Plotime ka diagonaal (slope=1).
abline(0, 1, col="grey")
#kuigi plotitud vektorid näitavad variatsiooni suunda, ei tee nad seda väga kasulikult.
#Kovariatsioonimaatriksi eigenvektorite leidmisega saame me kirjeldada
#variatsiooni kahe ristuva ortogoonilise vektoriga, mis näitavad variatsiooni
#suunda (nende kahe joone asemel, mida algselt kasutame).
eigenVecs <- eigen(cM)$vectors
lines(x=c(0, eigenVecs[1,1]), y=c(0, eigenVecs[2,1]), col="red")
lines(x=c(0, eigenVecs[1,2]), y=c(0, eigenVecs[2,2]), col="red")
#kuna eigenvektorid on ühikvektorid (ehk pikkusega 1), on lihtsam, kui neid
#visualiseerida, kui palju igaüks neist mõjutab andmeid (korrutame nad vastava
#eigenväärtusega, mis näitab, kui palju variatsioonist selgitab iga eigenvektor).
eVal1 <- eigen(cM)$values[1]
eVal2 <- eigen(cM)$values[2]
lines(x=c(0, eVal1*eigenVecs[1,1]), y=c(0, eVal1*eigenVecs[2,1]), col="red")
lines(x=c(0, eVal2*eigenVecs[1,2]), y=c(0, eVal2*eigenVecs[2,2]), col="red")
#See maatriks sisaldab eigenvektoreid ning me tahame kuvada nende
#eigenvektoritena. Praegusel juhul me kasutame mõlemat eigenvektorit, kuid
#kõrgedimensiooniliste andmete puhul kasutame ainult osa eigenvektoreid
#(see ongi PCA point).
rowFeatVec <- t(eigenVecs)
rowDataAdj <- t(m1)
#Viimaks kasutame maatriksi korrutamist, et saada punkt iga eigenvekori ja iga
#originaalse tsentreeritud andmete (m1) vahel. See operatsioon kirjeldab, mil
#määral igat punkti mõjutab iga eigenvektor. Plotime tulemused.
#NB! maatriksi korrutamise operaator R-s on %*%
transFData <- rowFeatVec %*% rowDataAdj
finalData <- rowFeatVec %*% rowDataAdj
plot(t(finalData), pch=seq(9))
#
eVal1
eigenVecs
eigen(cM)
sodi=read.csv("./data/sodi.csv")
sodi
prcomp(sodi)
sodi <- apply(sodi[, 2:4], 2, function(x) {x <- as.numeric(x); x})
sodi
prcomp(sodi)
prcomp(sodi)$values
prcomp(sodi)$vectors
prcomp(as.data.frame(sodi))$vectors
class(sodi)
sodi=as.data.frame(sodi)
sodi
prcomp(sodi)
prcomp(sodi)$values
sodi=read.csv("./data/sodi.csv")
sodi <- apply(sodi[, 2:4], 2, function(x) {x <- as.numeric(x); x})
sodi=as.data.frame(sodi)
prcomp(sodi)$values
prcomp(sodi)
eigen(sodi)
eigenVecs
rowFeatVec
rowFeatVec <- t(eigenVecs)
rowDataAdj <- t(m1)
rowDataAdj
rowFeatVec
eigenVecs
transFData
transFData
library(pheatmap)
pheatmap(vahetajad_kesk[, 3:1847], cluster_rows=FALSE, cluster_cols=FALSE)
gaps=which(vahetajad_kesk$nimi%in%vahet_nimed_kesk)
pheatmap(vahetajad_kesk[, 3:1847], cluster_rows=FALSE, cluster_cols=FALSE,
gaps_row = gaps)
vahet_nimed_kesk
gaps=which(vahetajad_kesk$nimi%in%vahet_nimed_kesk)
pheatmap(vahetajad_kesk[, 1000:1847], cluster_rows=FALSE, cluster_cols=FALSE,
gaps_row = gaps)
vahetajad_kesk[1, 1000]
vahetajad_kesk[, 1000]
vahetajad_kesk[, 1000:1001]
grepl("2013.12.12", names(vahetajad_kesk))
View(vahetajad_kesk)
gaps_b=3
pheatmap(vahetajad_kesk[, 1000:1847], cluster_rows=FALSE, cluster_cols=FALSE,
gaps_row = gaps_b)
pheatmap(vahetajad_kesk[, 1410:1847], cluster_rows=FALSE, cluster_cols=FALSE,
gaps_row = gaps_b)
pheatmap(vahetajad_kesk[, 1400:1847], cluster_rows=FALSE, cluster_cols=FALSE,
gaps_row = gaps_b)
pheatmap(vahetajad_kesk[, 1200:1847], cluster_rows=FALSE, cluster_cols=FALSE,
gaps_row = gaps_b)
pheatmap(vahetajad_kesk[3, 1200:1847], cluster_rows=FALSE, cluster_cols=T,
gaps_row = gaps_b)
pheatmap(vahetajad_kesk[, 1200:1847], cluster_rows=FALSE, cluster_cols=T,
gaps_row = gaps_b)
pheatmap(vahetajad_kesk[, 1000:1847], cluster_rows=FALSE, cluster_cols=T,
gaps_row = gaps_b)
d <- dist(as.matrix(vahetajad_kesk))   # find distance matrix
hc <- hclust(d)                # apply hirarchical clustering
plot(hc)
heatmap(vahetajad_kesk)
heatmap(vahetajad_kesk[,3:1847])
claSS(vahetajad_kesk[,3:1847])
clas(vahetajad_kesk[,3:1847])
class(vahetajad_kesk[,3:1847])
heatplot(vahetajad_kesk[,3:1847])
install:packaes(made4)
install.packaes(made4)
install.packages(made4)
install.packages("made4")
pc1_algne
ggplot(junn, aes(x=pc1_data1,  colour=fraktsioon))+
geom_point(aes(y=nimi),size=3)+
#coord_flip()+
facet_wrap(~fraktsioon,scales="free_y")+
#facet_grid(.~ fraktsioon,  scales="free_x")+
theme_minimal()
ggplot(junn, aes(x=pc1_data1,  colour=fraktsioon))+
geom_point(aes(y=nimi),size=3)+
#coord_flip()+
facet_wrap(~fraktsioon,scales="free_y")+
vline(xintercept=0)+
#facet_grid(.~ fraktsioon,  scales="free_x")+
theme_minimal()
ggplot(junn, aes(x=pc1_data1,  colour=fraktsioon))+
geom_point(aes(y=nimi),size=3)+
#coord_flip()+
facet_wrap(~fraktsioon,scales="free_y")+
geom_vline(xintercept=0)+
#facet_grid(.~ fraktsioon,  scales="free_x")+
theme_minimal()
ggplot(subset(junn, fraktsioon%in% c("Eesti Keskerakonna fraktsioon", "Fraktsiooni mittekuuluvad Riigikogu liikmed")), aes(x=pc1_data1,  colour=fraktsioon))+
geom_point(aes(y=nimi),size=3)+
geom_vline(xintercept=0)+
#facet_grid(.~ fraktsioon,  scales="free_x")+
theme_minimal()
heatmap(vahetajad_kesk[3,3:1847])
heatmap(vahetajad_kesk[3:4,3:1847])
heatmap(vahetajad_kesk[3:5,3:1847])
heatmap(vahetajad_kesk[,3:1847])
pheatmap(vahetajad_kesk[, 1000:1847], cluster_rows=FALSE, cluster_cols=T,
gaps_row = gaps_b)
pheatmap(vahetajad_kesk[3, 1000:1847], cluster_rows=FALSE, cluster_cols=T,
gaps_row = gaps_b)
pheatmap(vahetajad_kesk[3, 1000:1847])
pheatmap(vahetajad_kesk[3, 1000:1847], cluster_rows=FALSE, cluster_cols=FALSE)
pheatmap(vahetajad_kesk[3, 1000:1847], cluster_rows=FALSE, cluster_cols=T)
pheatmap(vahetajad_kesk[3, 1000:1847], cluster_rows=FALSE, cluster_cols=F)
pheatmap(vahetajad_kesk[, 3:1847], cluster_rows=FALSE, cluster_cols=FALSE,
gaps_row = gaps)
grepl("2012.04.09", names(vahetajad_kesk))
pheatmap(vahetajad_kesk[3, 200:300], cluster_rows=FALSE, cluster_cols=F)
pheatmap(vahetajad_kesk[, 200:300], cluster_rows=FALSE, cluster_cols=FALSE,
gaps_row = gaps)
pheatmap(vahetajad_kesk[, 250:350], cluster_rows=FALSE, cluster_cols=FALSE,
gaps_row = gaps)
vahetajad_kesk_order=vahetajad_kesk[order(vahetajad_kesk$fraktsioon),]
pheatmap(vahetajad_kesk_order[, 250:350], cluster_rows=FALSE, cluster_cols=FALSE,
gaps_row = gaps)
View(vahetajad_kesk_order)
vahetajad_kesk_order=vahetajad_kesk[order(-vahetajad_kesk$fraktsioon),]
vahetajad_kesk_order=vahetajad_kesk[-order(vahetajad_kesk$fraktsioon),]
pheatmap(vahetajad_kesk_order[, 250:350], cluster_rows=FALSE, cluster_cols=FALSE,
gaps_row = gaps)
pheatmap(vahetajad_kesk_order[, 250:350], cluster_rows=FALSE, cluster_cols=FALSE)
View(vahetajad_kesk_order)
vahetajad_kesk_order=vahetajad_kesk[order(-vahetajad_kesk$fraktsioon),]
vahetajad_kesk_order=vahetajad_kesk[order(vahetajad_kesk$fraktsioon,
decreasing = TRUE),]
pheatmap(vahetajad_kesk_order[, 250:350], cluster_rows=FALSE, cluster_cols=FALSE)
pheatmap(vahetajad_kesk_order[, 250:350], cluster_rows=T, cluster_cols=FALSE)
pheatmap(vahetajad_kesk_order[, 250:350], cluster_rows=F, cluster_cols=FALSE)
pheatmap(vahetajad_kesk_order[, 3:1847], cluster_rows=F, cluster_cols=FALSE)
View(vahetajad_kesk)
View(vahetajad_kesk_order)
View(vahetajad_kesk_order)
View(vahetajad_kesk_order)
View(vahetajad_kesk_order)
pheatmap(vahetajad_kesk_order[, 3:1847], cluster_rows=F, cluster_cols=FALSE,
gaps=gaps)
gapsid=c(7, 20)
pheatmap(vahetajad_kesk_order[, 3:1847], cluster_rows=F, cluster_cols=FALSE,
gaps=gapsid)
pheatmap(vahetajad_kesk_order[, 3:1847], cluster_rows=F, cluster_cols=FALSE)
pheatmap(vahetajad_kesk_order[, 3:1847], cluster_rows=F, cluster_cols=FALSE,
breaks=gapsid)
View(vahetajad_kesk_order)
gaps
gaps=c(7, 20)
pheatmap(vahetajad_kesk_order[, 3:1847], cluster_rows=F, cluster_cols=FALSE,
breaks=gaps)
pheatmap(vahetajad_kesk_order[, 3:1847], cluster_rows=F, cluster_cols=FALSE)
pheatmap(vahetajad_kesk_order[, 3:1847], cluster_rows=F, cluster_cols=FALSE,
gaps_row=gaps)
View(vahetajad_kesk_order)
