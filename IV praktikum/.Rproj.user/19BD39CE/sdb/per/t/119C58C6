{
    "contents" : "airports=read.csv(\"./data/airports.csv\")\nflights=read.csv(\"./data/flights.csv\")\n\n#Näide, kuidas joonistada suurringjoont R-is. Ühendame Liivi 2 maja Facebooki \n#peakontoriga.\nlibrary(maps)\nlibrary(geosphere)\n\nmap(\"world\", col=\"#f2f2f2\", fill=TRUE, border=NA)\n\nlat_liivi = 58.379491\nlon_liivi = 26.713199\nlat_fb = 37.485245\nlon_fb = -122.148807\n\ngc_points = gcIntermediate(c(lon_liivi, lat_liivi), c(lon_fb, lat_fb), n=50, \n                           addStartEnd=TRUE)\nlines(gc_points)\n\n#Visualiseeri suurringjoonte abil ühendusi, kuhu saab Tallinna lennujaamast \n#otselennuga.\n#mergime tabelid\nallikas=airports[, c(\"id\", \"lat\", \"lon\")]\nnames(allikas)=c(\"id\", \"source_airport_lat\", \"source_airport_lon\")\ndata=merge(flights, allikas, by.x=\"source_airport_id\", by.y=\"id\", all.x=T, all.y=F)\nnames(allikas)=c(\"id\", \"dest_airport_lat\", \"dest_airport_lon\")\ndata=merge(data, allikas, by.x=\"dest_airport_id\", by.y=\"id\", all.x=T, all.y=F)\n#teeme subseti ainult neist andmetest, kus alguspunkt on tallinn\ndata2=subset(data, source_airport_id==415)\n#teeme kaardi\nmap(xlim = c(-10, 40), ylim = c(30, 70),col=\"#f2f2f2\", fill=TRUE, border=NA)\n#itereerime punktid peale\nfor (i in 1:nrow(data2)) {\n    points = gcIntermediate(c(data2$source_airport_lon[i], \n                              data2$source_airport_lat[i]),\n                               c(data2$dest_airport_lon[i], \n                                 data2$dest_airport_lat[i]), n=50, \n                               addStartEnd=TRUE)\n    lines(points)\n}\n\n#Visualiseeri ühendusi, kuhu saab Tallinna lennujaamast otselennu või ühe \n#vahepeatusega.\nairports=unique(data2$dest_airport_id)\ndata3=subset(data, source_airport_id==415| source_airport_id %in% airports)\n#teeme mapi\nmap(\"world\",col=\"#c7e9c090\", fill=TRUE, border=NA,mar = c(1, 1, par(\"mar\")[3], 0.1))\n#itereerime punktid peale\n#Et värve muuta läbipaistvaks, lisa värvikoodile lõppu läbipaistvuse intensiivsus.\n#Näiteks kasuta funktsiooni lines korral argumenti col=\"#00000010\", et muuta \n#mustade (värvikood #000000) joonte läbipaistvus 10%-ni.\nfor (i in 1:nrow(data3)) {\n    points = gcIntermediate(c(data3$source_airport_lon[i], \n                              data3$source_airport_lat[i]),\n                            c(data3$dest_airport_lon[i], \n                              data3$dest_airport_lat[i]), n=50, \n                            addStartEnd=TRUE)\n    lines(points, col=\"#00000008\")\n}\n\n#Alusta Tallinna lennujaamast. Vali kõikvõimalikest lennujaamadest juhuslikult \n#üks ja lenda sinna. Vali nüüd juhuslikult järgmine sihtpunkt ning lenda sinna. \n#Jätka seda protsessi 100 korral ja visualiseeri läbitud teekonda.\nmap(\"world\",col=\"#c7e9c090\", fill=TRUE, border=NA,mar = c(1, 1, par(\"mar\")[3], 0.1))\n#teeme alguse ära, tallinnast esimene liin\ndata_subset=subset(data, source_airport_id==415)\ndestination=sample(data_subset$dest_airport_id,1)\ndata_subset=subset(data_subset, source_airport_id==415&\n                       dest_airport_id==destination )[1,] #võtame esimese rea\n#kuna võib olla mitu liini ühte kohta samast lennujaamast\n\npoint=gcIntermediate(c(data_subset$source_airport_lon, \n                       data_subset$source_airport_lat),\n                     c(data_subset$dest_airport_lon, \n                       data_subset$dest_airport_lat), n=50, \n                     addStartEnd=TRUE)\nlines(point, col=\"#00000050\")\n#kordame 100 korda\nfor (i in 1:100) {\n    data_subset=subset(data, source_airport_id==destination)\n    destination=sample(data_subset$dest_airport_id,1)\n    data_subset=subset(data_subset, dest_airport_id==destination )[1,]\n    points=gcIntermediate(c(data_subset$source_airport_lon, \n                           data_subset$source_airport_lat),\n                         c(data_subset$dest_airport_lon, \n                           data_subset$dest_airport_lat), n=50, \n                         addStartEnd=TRUE)\n    lines(points, col=\"#00000050\")  \n}\n\n#Sama asi aga suvalised lennujaamad (ei pea liini omavahel olema)\nmap(\"world\",col=\"#c7e9c090\", fill=TRUE, border=NA,mar = c(1, 1, par(\"mar\")[3], 0.1))\n\nalg=subset(airports, id==415)\nsamp=sample(airports$id,1)\ndest=subset(airports, id==samp)\npoint=gcIntermediate(c(alg$lon, \n                       alg$lat),\n                     c(dest$lon, \n                       dest$lat), n=50, \n                     addStartEnd=TRUE)\nlines(point, col=\"#00000050\")\n\nfor (i in 1:100) {\n    samp1=sample(airports$id,1)\n    alg=subset(airports, id==samp1)\n    samp2=sample(airports$id,1)\n    dest=subset(airports, id==samp2)\n    point=gcIntermediate(c(alg$lon, \n                           alg$lat),\n                         c(dest$lon, \n                           dest$lat), n=50, \n                         addStartEnd=TRUE)\n    lines(point, col=\"#00000050\")\n}\n",
    "created" : 1432666594867.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2491308067",
    "id" : "119C58C6",
    "lastKnownWriteTime" : 1431714414,
    "path" : "~/Minu asjad/Statistika, mudelid, excel/R/Andmeteadus_TU/IV praktikum/praktikum4_lennuliiklus.R",
    "project_path" : "praktikum4_lennuliiklus.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}