}
#vähem arve pärast komakohti
pvalues=round(as.numeric(pvalues), 10)
coefs=round(as.numeric(coefs), 6)
tulemid=data.frame(biomarkers, pvalues, coefs, upper, lower)
return(tulemid)
}
estimate_significance(formula0="s5 ~ sugu + vanusegrupp",
biomarkers=c("LDL_D", "HDL_C"), data=biomarkerid)
View(tulemid)
biomarkers=c("LDL_D", "HDL_C")
coefs=list()
pvalues=list()
upper=list()
lower=list()
for (i in 1:length(biomarkers)) {
formula = paste(formula0, biomarkers[i], sep=" + ")
model = glm(formula, family=binomial, data=data)
summary_table = coef(summary(model))
pvalues[i] = summary_table[nrow(summary_table), 4]
coefs[i] = summary_table[nrow(summary_table), 1]
upper[i]=as.numeric(coefs[i])+summary_table[nrow(summary_table), 2]*1.96
lower[i]=as.numeric(coefs[i])-summary_table[nrow(summary_table), 2]*1.96
}
#vähem arve pärast komakohti
pvalues=round(as.numeric(pvalues), 10)
coefs=round(as.numeric(coefs), 6)
tulemid=data.frame(biomarkers, pvalues, coefs, upper, lower)
return(tulemid)
data=biomarkerid
coefs=list()
pvalues=list()
upper=list()
lower=list()
for (i in 1:length(biomarkers)) {
formula = paste(formula0, biomarkers[i], sep=" + ")
model = glm(formula, family=binomial, data=data)
summary_table = coef(summary(model))
pvalues[i] = summary_table[nrow(summary_table), 4]
coefs[i] = summary_table[nrow(summary_table), 1]
upper[i]=as.numeric(coefs[i])+summary_table[nrow(summary_table), 2]*1.96
lower[i]=as.numeric(coefs[i])-summary_table[nrow(summary_table), 2]*1.96
}
#vähem arve pärast komakohti
pvalues=round(as.numeric(pvalues), 10)
coefs=round(as.numeric(coefs), 6)
tulemid=data.frame(biomarkers, pvalues, coefs, upper, lower)
return(tulemid)
upper
lower
tulemid
View(tulemid)
summary_table[nrow(summary_table), 2]*1.96
as.numeric(coefs[i])-summary_table[nrow(summary_table), 2]*1.96
as.numeric(coefs[i])+summary_table[nrow(summary_table), 2]*1.96
estimate_significance = function(formula0, biomarkers, data){
coefs=list()
pvalues=list()
upper=list()
lower=list()
for (i in 1:length(biomarkers)) {
formula = paste(formula0, biomarkers[i], sep=" + ")
model = glm(formula, family=binomial, data=data)
summary_table = coef(summary(model))
pvalues[i] = summary_table[nrow(summary_table), 4]
coefs[i] = summary_table[nrow(summary_table), 1]
upper[i]=as.numeric(coefs[i])+summary_table[nrow(summary_table), 2]*1.96
lower[i]=as.numeric(coefs[i])-summary_table[nrow(summary_table), 2]*1.96
}
tulemid=data.frame(biomarkers, pvalues, coefs, upper, lower)
return(tulemid)
}
coefs=list()
pvalues=list()
upper=list()
lower=list()
for (i in 1:length(biomarkers)) {
formula = paste(formula0, biomarkers[i], sep=" + ")
model = glm(formula, family=binomial, data=data)
summary_table = coef(summary(model))
pvalues[i] = summary_table[nrow(summary_table), 4]
coefs[i] = summary_table[nrow(summary_table), 1]
upper[i]=as.numeric(coefs[i])+summary_table[nrow(summary_table), 2]*1.96
lower[i]=as.numeric(coefs[i])-summary_table[nrow(summary_table), 2]*1.96
}
tulemid=data.frame(biomarkers, pvalues, coefs, upper, lower)
return(tulemid)
tulemid
data.frame("biomarkers" = biomarkers, "pvalues" = pvalues, "coefs" = coefs,
"upper"=upper, "lower"=lower)
proov=data.frame("biomarkers" = biomarkers, "pvalues" = pvalues, "coefs" = coefs,
"upper"=upper, "lower"=lower)
View(proov)
estimate_significance = function(formula0, biomarkers, data){
coefs=list()
pvalues=list()
upper=list()
lower=list()
for (i in 1:length(biomarkers)) {
formula = paste(formula0, biomarkers[i], sep=" + ")
model = glm(formula, family=binomial, data=data)
summary_table = coef(summary(model))
pvalues[i] = summary_table[nrow(summary_table), 4]
coefs[i] = summary_table[nrow(summary_table), 1]
upper[i]=summary_table[nrow(summary_table), 1]
+summary_table[nrow(summary_table), 2]*1.96
lower[i]=summary_table[nrow(summary_table), 1]
-summary_table[nrow(summary_table), 2]*1.96
}
#tulemid=data.frame(biomarkers, pvalues, coefs, upper, lower)
tulemid=data.frame("biomarkers" = biomarkers, "pvalues" = pvalues, "coefs" = coefs,
"upper"=upper, "lower"=lower)
return(tulemid)
}
#test
estimate_significance(formula0="s5 ~ sugu + vanusegrupp",
biomarkers=c("LDL_D", "HDL_C"), data=biomarkerid)
estimate_significance = function(formula0, biomarkers, data){
coefs=list()
pvalues=list()
upper=list()
lower=list()
for (i in 1:length(biomarkers)) {
formula = paste(formula0, biomarkers[i], sep=" + ")
model = glm(formula, family=binomial, data=data)
summary_table = coef(summary(model))
pvalues[i] = summary_table[nrow(summary_table), 4]
coefs[i] = summary_table[nrow(summary_table), 1]
upper[i]=summary_table[nrow(summary_table), 1]
+summary_table[nrow(summary_table), 2]*1.96
lower[i]=summary_table[nrow(summary_table), 1]
-summary_table[nrow(summary_table), 2]*1.96
}
tulemid=data.frame(biomarkers, pvalues, coefs, upper, lower)
#     tulemid=data.frame("biomarkers" = biomarkers, "pvalues" = pvalues, "coefs" = coefs,
#                "upper"=upper, "lower"=lower)
return(tulemid)
}
estimate_significance(formula0="s5 ~ sugu + vanusegrupp",
biomarkers=c("LDL_D", "HDL_C"), data=biomarkerid)
estimate_significance = function(formula0, biomarkers, data){
coefs=list()
pvalues=list()
for (i in 1:length(biomarkers)) {
formula = paste(formula0, biomarkers[i], sep=" + ")
model = glm(formula, family=binomial, data=data)
summary_table = coef(summary(model))
pvalues[i] = summary_table[nrow(summary_table), 4]
coefs[i] = summary_table[nrow(summary_table), 1]
}
#vähem arve pärast komakohti
pvalues=round(as.numeric(pvalues), 10)
coefs=round(as.numeric(coefs), 6)
tulemid=data.frame(biomarkers, pvalues, coefs)
return(tulemid)
}
estimate_significance(formula0="s5 ~ sugu + vanusegrupp",
biomarkers=c("LDL_D", "HDL_C"), data=biomarkerid)
tulemid=data.frame(biomarkers, pvalues, coefs, upper, lower)
tulemid
for (i in 1:length(biomarkers)) {
formula = paste(formula0, biomarkers[i], sep=" + ")
model = glm(formula, family=binomial, data=data)
summary_table = coef(summary(model))
pvalues[i] = summary_table[nrow(summary_table), 4]
coefs[i] = summary_table[nrow(summary_table), 1]
upper[i]=summary_table[nrow(summary_table), 1]
+summary_table[nrow(summary_table), 2]*1.96
lower[i]=summary_table[nrow(summary_table), 1]
-summary_table[nrow(summary_table), 2]*1.96
}
upper
lower
coefs
pvalues
biomarkers
tulemid=data.frame(biomarkers, pvalues, coefs, upper, lower)
tulemid
tulemid=as.data.frame(biomarkers, pvalues, coefs, upper, lower)
coefs
lower
upper
summary_table
summary_table[nrow(summary_table), 2]
summary_table[nrow(summary_table), 2]*1.96
summary_table[nrow(summary_table), 1]
-summary_table[nrow(summary_table), 2]*1.96
summary_table[nrow(summary_table), 1]-summary_table[nrow(summary_table), 2]*1.96
estimate_significance = function(formula0, biomarkers, data){
coefs=list()
pvalues=list()
upper=list()
lower=list()
for (i in 1:length(biomarkers)) {
formula = paste(formula0, biomarkers[i], sep=" + ")
model = glm(formula, family=binomial, data=data)
summary_table = coef(summary(model))
pvalues[i] = summary_table[nrow(summary_table), 4]
coefs[i] = summary_table[nrow(summary_table), 1]
upper[i]=summary_table[nrow(summary_table), 1]+summary_table[nrow(summary_table), 2]*1.96
lower[i]=summary_table[nrow(summary_table), 1]-summary_table[nrow(summary_table), 2]*1.96
}
tulemid=as.data.frame(biomarkers, pvalues, coefs, upper, lower)
#     tulemid=data.frame("biomarkers" = biomarkers, "pvalues" = pvalues, "coefs" = coefs,
#                "upper"=upper, "lower"=lower)
return(tulemid)
}
estimate_significance(formula0="s5 ~ sugu + vanusegrupp",
biomarkers=c("LDL_D", "HDL_C"), data=biomarkerid)
estimate_significance = function(formula0, biomarkers, data){
coefs=list()
pvalues=list()
upper=list()
lower=list()
for (i in 1:length(biomarkers)) {
formula = paste(formula0, biomarkers[i], sep=" + ")
model = glm(formula, family=binomial, data=data)
summary_table = coef(summary(model))
pvalues[i] = summary_table[nrow(summary_table), 4]
coefs[i] = summary_table[nrow(summary_table), 1]
upper[i]=summary_table[nrow(summary_table), 1]+summary_table[nrow(summary_table), 2]*1.96
lower[i]=summary_table[nrow(summary_table), 1]-summary_table[nrow(summary_table), 2]*1.96
}
tulemid=as.data.frame(biomarkers, pvalues, coefs, upper, lower)
#     tulemid=data.frame("biomarkers" = biomarkers, "pvalues" = pvalues, "coefs" = coefs,
#                "upper"=upper, "lower"=lower)
return(tulemid)
}
estimate_significance = function(formula0, biomarkers, data){
coefs=list()
pvalues=list()
upper=list()
lower=list()
for (i in 1:length(biomarkers)) {
formula = paste(formula0, biomarkers[i], sep=" + ")
model = glm(formula, family=binomial, data=data)
summary_table = coef(summary(model))
pvalues[i] = summary_table[nrow(summary_table), 4]
coefs[i] = summary_table[nrow(summary_table), 1]
upper[i]=summary_table[nrow(summary_table), 1]+summary_table[nrow(summary_table), 2]*1.96
lower[i]=summary_table[nrow(summary_table), 1]-summary_table[nrow(summary_table), 2]*1.96
}
tulemid=data.frame(biomarkers, pvalues, coefs, upper, lower)
#     tulemid=data.frame("biomarkers" = biomarkers, "pvalues" = pvalues, "coefs" = coefs,
#                "upper"=upper, "lower"=lower)
return(tulemid)
}
estimate_significance(formula0="s5 ~ sugu + vanusegrupp",
biomarkers=c("LDL_D", "HDL_C"), data=biomarkerid)
coefs=list()
pvalues=list()
upper=list()
lower=list()
for (i in 1:length(biomarkers)) {
formula = paste(formula0, biomarkers[i], sep=" + ")
model = glm(formula, family=binomial, data=data)
summary_table = coef(summary(model))
pvalues[i] = summary_table[nrow(summary_table), 4]
coefs[i] = summary_table[nrow(summary_table), 1]
upper[i]=summary_table[nrow(summary_table), 1]+summary_table[nrow(summary_table), 2]*1.96
lower[i]=summary_table[nrow(summary_table), 1]-summary_table[nrow(summary_table), 2]*1.96
}
biomarkers
pvalues
coefs
upper
lower
tulemid=data.frame(biomarkers, pvalues, coefs, upper, lower)
tulemid
class(upper)
class)lower
class(lower)
class(pvalues)
class(coefs)
class(biomarkers)
tulemid=data.frame(biomarkers, pvalues, coefs)
tulemid
estimate_significance = function(formula0, biomarkers, data){
coefs=list()
pvalues=list()
upper=list()
lower=list()
for (i in 1:length(biomarkers)) {
formula = paste(formula0, biomarkers[i], sep=" + ")
model = glm(formula, family=binomial, data=data)
summary_table = coef(summary(model))
pvalues[i] = summary_table[nrow(summary_table), 4]
coefs[i] = summary_table[nrow(summary_table), 1]
upper[i]=summary_table[nrow(summary_table), 1]+summary_table[nrow(summary_table), 2]*1.96
lower[i]=summary_table[nrow(summary_table), 1]-summary_table[nrow(summary_table), 2]*1.96
}
tulemid=data.frame(biomarkers, pvalues, coefs)
#     tulemid=data.frame("biomarkers" = biomarkers, "pvalues" = pvalues, "coefs" = coefs,
#                "upper"=upper, "lower"=lower)
return(tulemid)
}
#test
estimate_significance(formula0="s5 ~ sugu + vanusegrupp",
biomarkers=c("LDL_D", "HDL_C"), data=biomarkerid)
estimate_significance = function(formula0, biomarkers, data){
coefs=list()
pvalues=list()
for (i in 1:length(biomarkers)) {
formula = paste(formula0, biomarkers[i], sep=" + ")
model = glm(formula, family=binomial, data=data)
summary_table = coef(summary(model))
pvalues[i] = summary_table[nrow(summary_table), 4]
coefs[i] = summary_table[nrow(summary_table), 1]
}
#vähem arve pärast komakohti
pvalues=round(as.numeric(pvalues), 10)
coefs=round(as.numeric(coefs), 6)
tulemid=data.frame(biomarkers, pvalues, coefs)
return(tulemid)
}
estimate_significance(formula0="s5 ~ sugu + vanusegrupp",
biomarkers=c("LDL_D", "HDL_C"), data=biomarkerid)
estimate_significance = function(formula0, biomarkers, data){
coefs=list()
pvalues=list()
upper=list()
lower=list()
for (i in 1:length(biomarkers)) {
formula = paste(formula0, biomarkers[i], sep=" + ")
model = glm(formula, family=binomial, data=data)
summary_table = coef(summary(model))
pvalues[i] = summary_table[nrow(summary_table), 4]
coefs[i] = summary_table[nrow(summary_table), 1]
upper[i]=summary_table[nrow(summary_table), 1]+summary_table[nrow(summary_table), 2]*1.96
lower[i]=summary_table[nrow(summary_table), 1]-summary_table[nrow(summary_table), 2]*1.96
}
pvalues=round(as.numeric(pvalues), 10)
coefs=round(as.numeric(coefs), 6)
upper=round(as.numeric(upper), 6)
lower=round(as.numeric(lower), 6)
tulemid=data.frame(biomarkers, pvalues, coefs)
#     tulemid=data.frame("biomarkers" = biomarkers, "pvalues" = pvalues, "coefs" = coefs,
#                "upper"=upper, "lower"=lower)
return(tulemid)
}
estimate_significance(formula0="s5 ~ sugu + vanusegrupp",
biomarkers=c("LDL_D", "HDL_C"), data=biomarkerid)
estimate_significance = function(formula0, biomarkers, data){
coefs=list()
pvalues=list()
upper=list()
lower=list()
for (i in 1:length(biomarkers)) {
formula = paste(formula0, biomarkers[i], sep=" + ")
model = glm(formula, family=binomial, data=data)
summary_table = coef(summary(model))
pvalues[i] = summary_table[nrow(summary_table), 4]
coefs[i] = summary_table[nrow(summary_table), 1]
upper[i]=summary_table[nrow(summary_table), 1]+summary_table[nrow(summary_table), 2]*1.96
lower[i]=summary_table[nrow(summary_table), 1]-summary_table[nrow(summary_table), 2]*1.96
}
pvalues=round(as.numeric(pvalues), 10)
coefs=round(as.numeric(coefs), 6)
upper=round(as.numeric(upper), 6)
lower=round(as.numeric(lower), 6)
tulemid=data.frame(biomarkers, pvalues, coefs, upper, lower)
#     tulemid=data.frame("biomarkers" = biomarkers, "pvalues" = pvalues, "coefs" = coefs,
#                "upper"=upper, "lower"=lower)
return(tulemid)
}
estimate_significance(formula0="s5 ~ sugu + vanusegrupp",
biomarkers=c("LDL_D", "HDL_C"), data=biomarkerid)
estimate_significance(formula0="s5 ~ sugu + vanusegrupp",
biomarkers=names(biomarkerid)[6:111], data=biomarkerid)
esimene=estimate_significance(formula0="s5 ~ sugu + vanusegrupp",
biomarkers=names(biomarkerid)[6:111], data=biomarkerid)
esimene[order(esimene$pvalues)]
esimene[order(esimene$pvalues),]
marker1=esimene[order(esimene$pvalues),][1,1]
marker1
teine=estimate_significance(formula0="s5 ~ sugu + vanusegrupp + Alb",
biomarkers=names(biomarkerid)[6:111], data=biomarkerid)
teine[order(teine$pvalues),]
kolmas=estimate_significance(formula0="s5 ~ sugu + vanusegrupp + Alb + Gp",
biomarkers=names(biomarkerid)[6:111], data=biomarkerid)
kolmas[order(kolmas$pvalues),]
neljas=estimate_significance(formula0="s5 ~ sugu + vanusegrupp + Alb + Gp + Cit",
biomarkers=names(biomarkerid)[6:111], data=biomarkerid)
neljas(neljas$pvalues),]
neljas[(neljas$pvalues),]
neljas[order(neljas$pvalues),]
model = glm(s5 ~ suits + HDL_C, family=binomial, data=data)
newdata = data.frame(suits = c(0, 0, 1),
HDL_C = c(0.5, -0.2, 1.1),
suvaline_tunnus = c(1, 2, 3))
predicted_probabilities = predict(model, newdata=newdata, type = "response")
model = glm(s5 ~ suits + HDL_C, family=binomial, data=biomarkers)
newdata = data.frame(suits = c(0, 0, 1),
HDL_C = c(0.5, -0.2, 1.1),
suvaline_tunnus = c(1, 2, 3))
model = glm(s5 ~ suits + HDL_C, family=binomial, data=biomarkerid)
newdata = data.frame(suits = c(0, 0, 1),
HDL_C = c(0.5, -0.2, 1.1),
suvaline_tunnus = c(1, 2, 3))
predicted_probabilities = predict(model, newdata=newdata, type = "response")
predicted_probabilities
neljas[order(neljas$pvalues),]
model = glm(s5 ~ sugu + vanusegrupp + Alb + Gp + Cit,
family=binomial, data=biomarkerid)
newdata = biomarkerid[,c("s5", "sugu", "vanusegrupp", "Alb", "Gp", "Cit")]
predicted_probabilities = predict(model, newdata=newdata, type = "response")
hist(predicted_probabilities)
predicted_probabilities
summary(biomarkerid$s5)
summary(factor(biomarkerid$s5))
proov=ifelse(predicted_probabilities<0.5, 0, 1)
vordlus=data.frame(biomarkerid$s5, proov)
View(vordlus)
summary(factor(vordlus$biomarkerid.s5-proov))
166/3992
surnud=subset(vordlus, biomarkerid.s5==1)
surnud
summary(factor(vordlus$biomarkerid.s5-vordlus$proov))
surnud=subset(vordlus, biomarkerid.s5==1)
summary(factor(surnud$biomarkerid.s5-surnud$proov))
157+19
157/176
predicted_probabilities
library(caret)
confusionMatrix(vordlus$proov, biomarkerid$s5)
confusionMatrix(vrep.int(0, length(vordlus$proov)), biomarkerid$s5)
confusionMatrix(rep.int(0, length(vordlus$proov)), biomarkerid$s5)
rep.int(0, length(vordlus$proov))
naive=data.frame(rep.int(0, length(vordlus$proov)))
naive
naive$s5=biomarkerid$s5
View(naive)
summary(factor(naive$rep.int.0..length.vordlus.proov..-naive$s5))
summary(factor(naive$s5-naive$rep.int.0..length.vordlus.proov..))
3992/176
176/3992
176/3992*100
summary(factor(vordlus$biomarkerid.s5-vordlus$proov)) #pole paha
166/3992*100
proov=ifelse(predicted_probabilities<0.2, 0, 1)
vordlus=data.frame(biomarkerid$s5, proov)
#kui palju ma puusse panin
summary(factor(vordlus$biomarkerid.s5-vordlus$proov)) #pole paha, 4.158% viga
proov=ifelse(predicted_probabilities<0.7, 0, 1)
vordlus=data.frame(biomarkerid$s5, proov)
#kui palju ma puusse panin
summary(factor(vordlus$biomarkerid.s5-vordlus$proov)) #pole paha, 4.158% viga
170/3992
proov=ifelse(predicted_probabilities<0.8, 0, 1)
vordlus=data.frame(biomarkerid$s5, proov)
#kui palju ma puusse panin
summary(factor(vordlus$biomarkerid.s5-vordlus$proov)) #pole paha, 4.158% viga
proov=ifelse(predicted_probabilities<0.6, 0, 1)
vordlus=data.frame(biomarkerid$s5, proov)
#kui palju ma puusse panin
summary(factor(vordlus$biomarkerid.s5-vordlus$proov)) #pole paha, 4.158% viga
proov=ifelse(predicted_probabilities<0.55, 0, 1)
vordlus=data.frame(biomarkerid$s5, proov)
#kui palju ma puusse panin
summary(factor(vordlus$biomarkerid.s5-vordlus$proov)) #pole paha, 4.158% viga
168/3992
proov=ifelse(predicted_probabilities<0.5, 0, 1)
vordlus=data.frame(biomarkerid$s5, proov)
#kui palju ma puusse panin
summary(factor(vordlus$biomarkerid.s5-vordlus$proov)) #pole paha, 4.158% viga
proov=ifelse(predicted_probabilities<0.45, 0, 1)
vordlus=data.frame(biomarkerid$s5, proov)
#kui palju ma puusse panin
summary(factor(vordlus$biomarkerid.s5-vordlus$proov)) #pole paha, 4.158% viga
proov=ifelse(predicted_probabilities<0.5, 0, 1)
vordlus=data.frame(biomarkerid$s5, proov)
#kui palju ma puusse panin
summary(factor(vordlus$biomarkerid.s5-vordlus$proov)) #pole paha, 4.158% viga
estimate_significance = function(formula0, biomarkers, data){
coefs=list()
pvalues=list()
upper=list()
lower=list()
for (i in 1:length(biomarkers)) {
formula = paste(formula0, biomarkers[i], sep=" + ")
model = glm(formula, family=binomial, data=data)
summary_table = coef(summary(model))
pvalues[i] = summary_table[nrow(summary_table), 4]
coefs[i] = summary_table[nrow(summary_table), 1]
upper[i]=summary_table[nrow(summary_table), 1]+summary_table[nrow(summary_table), 2]*1.96
lower[i]=summary_table[nrow(summary_table), 1]-summary_table[nrow(summary_table), 2]*1.96
}
pvalues=round(as.numeric(pvalues), 10)
coefs=round(as.numeric(coefs), 6)
upper=round(as.numeric(upper), 6)
lower=round(as.numeric(lower), 6)
tulemid=data.frame(biomarkers, pvalues, coefs, upper, lower)
return(tulemid)
}
#test
estimate_significance(formula0="s5 ~ sugu + vanusegrupp",
biomarkers=c("LDL_D", "HDL_C"), data=biomarkerid)
proov=estimate_significance(formula0="s5 ~ sugu + vanusegrupp",
biomarkers=c("LDL_D", "HDL_C"), data=biomarkerid)
ggplot(litnum2, aes(x=biomarkers, ymax=upper, ymin=lower, y=pvalues))+
geom_pointrange(aes(fill=pvalues), shape=21)
library(ggplot2)
ggplot(litnum2, aes(x=biomarkers, ymax=upper, ymin=lower, y=pvalues))+
geom_pointrange(aes(fill=pvalues), shape=21)
ggplot(proov, aes(x=biomarkers, ymax=upper, ymin=lower, y=pvalues))+
geom_pointrange(aes(fill=pvalues), shape=21)
ggplot(proov, aes(x=biomarkers, ymax=upper, ymin=lower, y=coefs))+
geom_pointrange(aes(fill=coefs), shape=21)
ggplot(proov, aes(x=biomarkers, ymax=upper, ymin=lower, y=coefs))+
geom_pointrange(aes(fill=coefs), shape=21)+
guides(fill=FALSE)
knitr::knit2html('praktikum7.Rmd')
