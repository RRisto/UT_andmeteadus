{
    "contents" : "biomarkerid=read.csv(\"./data/biomarkerid.csv\")\n\nbiomarkerid=biomarkerid[complete.cases(biomarkerid),]\n#Eralda andmestikust alamandmestik, mis sisaldaks tunnuseid sugu, vanusgrupp, s5, \n#hyp, suits ning järgmisi biomarkereid:\n#Serum_C - üldkolesterool\n#HDL_C - HDL kolesterool (“hea”)\n#LDL_C - LDL kolesterool (“halb”)\n\nbiom_subset=biomarkerid[, c(\"sugu\", \"vanusegrupp\", \"s5\", \"hyp\", \"suits\", \n                            \"Serum_C\", \"HDL_C\", \"LDL_C\")]\n\n#Ülesanne 1 (2 punkti) - kolesterool soo ja vanusegruppide lõikes\n#Tutvu andmestikuga ja selgita välja, kuidas on kodeeritud tunnus sugu (kas \n#0 tähistab meest või naist)? Visualiseeri, kuidas nende 3 biomarkeri jaotused \n#erinevad soo ja vanusegruppide lõikes.\n#Serum_C\nlibrary(ggplot2)\nggplot(biom_subset, aes(x=factor(sugu), y=Serum_C))+\n    geom_boxplot()\n#HDL_C\nggplot(biom_subset, aes(x=factor(sugu), y=HDL_C))+\n    geom_boxplot()\n#LDL_C\nggplot(biom_subset, aes(x=factor(sugu), y=LDL_C))+\n    geom_boxplot()\n\n#vanusegrappide lõikes\nggplot(biom_subset, aes(x=factor(sugu), y=Serum_C))+\n    geom_boxplot()+\n    facet_wrap(~vanusegrupp)\n\n#HDL_C\nggplot(biom_subset, aes(x=factor(sugu), y=HDL_C))+\n    geom_boxplot()+\n    facet_wrap(~vanusegrupp)\n#LDL_C\nggplot(biom_subset, aes(x=factor(sugu), y=LDL_C))+\n    geom_boxplot()+\n    facet_wrap(~vanusegrupp)\n\n#Ülesanne 2 (4 punkti) - surma prognoosimine kolesterooli abil?\n#Uuri, kas kolesterool võimaldab prognoosida surma. Selleks tuleb andmetele \n#sobitada mudel. Visualiseeri, kas kolesterooli (Serum_C, HDL_C, LDL_C) abil \n#võiks saada prognoosida surma.\nggplot(biom_subset, aes(x=factor(s5), y=Serum_C))+\n    geom_boxplot()\n#HDL_C\nggplot(biom_subset, aes(x=factor(s5), y=HDL_C))+\n    geom_boxplot()\n#LDL_C\nggplot(biom_subset, aes(x=factor(s5), y=LDL_C))+\n    geom_boxplot()\n\n#Tundub, et joonisest ei piisa ning tuleb pöörduda statistiliste mudelite juurde.\n#Kas kasutad lineaarset või logistilist regressiooni? Miks?\n#Sobitasime mudeli glm(s5 ~ HDL_C, family=binomial, data=data) ning selgus, \n#et HDL_C on oluline surma prognoosimisel. Seejärel aga sobitasime mudeli \n#glm(s5 ~ HDL_C + sugu, family=binomial, data=data), siis miskipärast HDL_C \n#enam ei ole oluline. Selgita, mis värk on. Kas siis kokkuvõttes on oluline või \n#mitte?\nmudel1=glm(s5 ~ HDL_C, family=binomial, data=biom_subset)\nsummary(mudel1)\n\nmudel2=glm(s5 ~ HDL_C + sugu, family=binomial, data=biom_subset)\nsummary(mudel2)\n\n#Sobita kolm mudelit, et uurida kolesterooli (tunnuste Serum_C, HDL_C ja LDL_C) \n#seost surmaga. Muide, kas lisad mudelitesse ka tunnused sugu, vanusegrupp, \n#suits ja hyp? Põhjenda oma otsust.\nmudel3=glm(s5 ~ Serum_C+ HDL_C + LDL_C, family=binomial, data=biom_subset)\nsummary(mudel3)\n\n#Ülesanne 3 (1 punkt) - korrelatsioonid biomarkerite vahel\n#Tee joonis, mis annaks hästi edasi, kas ja millised biomarkerid on omavahel \n#korreleeritud. (Näpunäide: Arvuta korrelatsioonimaatriks käsuga cor ning \n#visualiseeri seda.) Interpreteeri, milliseid mustreid ja seoseid näed?\nkorrel_maatriks=cor(biomarkerid[6:111])\nlibrary(corrplot)\ncorrplot(korrel_maatriks, method = \"number\")\n\nlibrary(pheatmap)\npheatmap(korrel_maatriks, cluster_rows=FALSE, cluster_cols=FALSE)\n\n#Ülesanne 4 (1 punkt) - Oluliste biomarkeri tuvastamine\n#Milline biomarker aitab kõige paremini ennustada surma kui võtame arvesse \n#vanuse ja soo mõju?\n#Selleks sobita mudelid\n#s5 ~ sugu + vanusegrupp + biomarker_1\n#s5 ~ sugu + vanusegrupp + biomarker_2\n#…\n#s5 ~ sugu + vanusegrupp + biomarker_106\n#ja iga biomarkeri korral eralda mudelist selle p-väärtus ja kordaja.\n#Kui sa ei soovi 106 korda glm mudelit käsitsi jooksutada ja manuaalselt \n#p-väärtuseid välja noppida, siis automatiseeri see (näiteks for tsükli abil).\n#Näide, kuidas ühe biomarkeri korral saada kätte p-väärtus ja kordaja:\nbiomarker = \"LDL_D\"\nformula0 = \"s5 ~ sugu + vanusegrupp\"\nformula = paste(formula0, biomarker, sep=\" + \")\nmodel = glm(formula, family=binomial, data=biomarkerid)\nsummary_table = coef(summary(model))\npvalue = summary_table[nrow(summary_table), 4]\nestimate = summary_table[nrow(summary_table), 1]\n\nprint(paste(\"Biomarker \", biomarker, \n            \", kordaja: \" , estimate,\n            \", pväärtus: \", pvalue,\n            sep=\"\"))\n\n\n#teeme asja for tsükliga iga markeri kohta\nbiomarkers = names(biomarkerid)[6:111]\nformula0 = \"s5 ~ sugu + vanusegrupp\"\n\nfor (i in 1:length(biomarkers)) {\n    formula = paste(formula0, biomarkers[i], sep=\" + \")\n    model = glm(formula, family=binomial, data=biomarkerid)\n    summary_table = coef(summary(model))\n    pvalue[i] = summary_table[nrow(summary_table), 4]\n    estimate[i] = summary_table[nrow(summary_table), 1] \n}\n#vähem arve pärast komakohti\npvalue=round(pvalue, 4)\nestimate=round(estimate, 4)\ntulemid=data.frame(biomarkers, pvalue, estimate)\n\n#Ülesanne 5 (1 punkt)\n#Kirjuta eelnev kood funktsiooniks. \n\nestimate_significance = function(formula0, biomarkers, data){\n    coefs=list()\n    pvalues=list()\n    for (i in 1:length(biomarkers)) {\n        formula = paste(formula0, biomarkers[i], sep=\" + \")\n        model = glm(formula, family=binomial, data=data)\n        summary_table = coef(summary(model))\n        pvalues[i] = summary_table[nrow(summary_table), 4]\n        coefs[i] = summary_table[nrow(summary_table), 1] \n    }\n    #vähem arve pärast komakohti\n    pvalues=round(as.numeric(pvalues), 10)\n    coefs=round(as.numeric(coefs), 6)\n    tulemid=data.frame(biomarkers, pvalues, coefs)\n    \n    return(tulemid)\n}\n#testin\nestimate_significance(formula0=\"s5 ~ sugu + vanusegrupp\", \n                      biomarkers=c(\"LDL_D\", \"HDL_C\"), data=biomarkerid)\n\n#Kasuta nüüd eelnevalt kirjutatud funktsiooni kõigi 106 biomarkeri jaoks. \n#Prindi välja iga biomarkeri p-väärtus ning kordaja hinnang.\nhinnangud=estimate_significance(formula0=\"s5 ~ sugu + vanusegrupp\", \n                      biomarkers=names(biomarkerid)[6:111], data=biomarkerid)\n\n#Visualiseeri saadud tulemust.\nlibrary(ggplot2)\n#leaime õige järjekorra\njrk=with(hinnangud, reorder(biomarkers, pvalues, mean))\n#plotime\nggplot(hinnangud, aes(x=jrk, y=log(pvalues)))+\n    geom_point()+\n    geom_hline(yintercept=log(0.05), colour=\"red\")+\n    theme(axis.text.x=element_text(angle=90))\n#kui aga kasutada bonferroni korrektsiooni\nggplot(hinnangud, aes(x=jrk, y=log(pvalues)))+\n    geom_point()+\n    geom_hline(yintercept=log(0.0005), colour=\"red\")+\n    theme(axis.text.x=element_text(angle=90))\n\n\n#(2 punkti) Veendumaks, et p < 0.05 kasutamisel võime tõepoolest saada liiga \n#palju valepositiivseid tulemusi, tekita andmestik, kus puudub seos tunnuse s5 \n#ja biomarkerite vahel. Selleks tekita uus tunnus, kus oleks s5 väärtuseid \n#permuteeritud suvaliselt. Sobita nüüd mudelid, kus prognoosiksid permuteeritud \n#s5 väärtuseid biomarkerite põhjal (selleks võid kasutada ülesandes 5 kirjutatud\n#funktsiooni).\n#permuteerime s5-e\nset.seed(100)\nbiomarkerid$s5_permut=sample(biomarkerid$s5, replace=T)\n#names(biomarkerid)\n\nhinnangud_permut=estimate_significance(formula0=\"s5_permut ~ sugu + vanusegrupp\", \n                                biomarkers=names(biomarkerid)[6:111], \n                                data=biomarkerid)\n#leiame faktorite õige järjekorra\njrk_permut=with(hinnangud_permut, reorder(biomarkers, pvalues, mean))\n#plotime\nggplot(hinnangud_permut, aes(x=jrk_permut, y=log(pvalues)))+\n    geom_point()+\n    geom_hline(yintercept=log(0.05), colour=\"red\")+\n    theme(axis.text.x=element_text(angle=90))\n\n#Mitme biomarkeri p-väärtused tulid väiksemad kui 0.05?\nnrow(subset(hinnangud_permut,pvalues<0.05)) #53 kui seed 200, 100-ga 27\n#Aga mitu tükki olid olulised Bonferroni korrektsiooni järgi?\nggplot(hinnangud_permut, aes(x=jrk_permut, y=log(pvalues)))+\n    geom_point()+\n    geom_hline(yintercept=log(0.0005), colour=\"red\")+\n    theme(axis.text.x=element_text(angle=90))\n\nnrow(subset(hinnangud_permut,pvalues<0.0005)) #0\n\n#Mitut olulist p-väärtust oleksid oodanud kummalgi juhul? Selgita.\n#esimesel juhul 106*0,05=5.3\n#teisel juhul 106*0.0005=0.053\n\n#(1 boonuspunkt) Korda permuteerimist 100 korral ning tee kokkuvõte tulemustest.\ntavaline=list()\nbonf=list()\n#aeglane, 20min teeb!\nfor (i in 1:100) {\n    \n    biomarkerid$s5_permut=sample(biomarkerid$s5, replace=T)\n    pvaartused=estimate_significance(formula0=\"s5_permut ~ sugu + vanusegrupp\", \n                                           biomarkers=names(biomarkerid)[6:111], \n                                           data=biomarkerid)[,2]\n    tavaline[i]=summary(pvaartused<0.05)[3] \n    bonf[i]=summary(pvaartused<0.0005)[3] \n}\n\nhist(as.numeric(tavaline),  freq=FALSE, breaks=40)\nhist(as.numeric(bonf), freq=FALSE, breaks=40)\n\nsimul=data.frame(as.numeric(tavaline),as.numeric(bonf))\nsummary(simul)\n\n#Ülesanne 8 (1 punkt) - alternatiiv Bonferroni korrektsioonile\n#Ülesandes 3 nägime, et mitmed biomarkerid on omavahel tugevalt korreleeritud. \n#Niisiis võib Bonferroni korrektsioon osutuda praegu liiga rangeks. \n#Alternatiivselt võiksime leida, kui suur on meie andmestikus mittekorreleeritud \n#tunnuste arv, ning teha nende arvu järgi Bonferroni korrektsiooni. Selleks, et \n#leida andmestiku nn “efektiivne dimensionaalsus”, kasuta PCA-d.\n#Juhised:\n#Rakenda andmestikul PCA-d ning leia, mitu peakomponenti seletavad näiteks 99% \n#variatsioonist. Leitud peakomponentide arv näitabki ligikaudu sõltumatute \n#tunnuste arvu meie andmestikus. Tee Bonferroni korrektsioon selle arvu järgi.\n#Millise p-väärtuse piiri saad?\npca = prcomp(biomarkerid[, 6:111])\npca_sum=summary(pca)\n#u 24 muutujat selgitab 99% variatsioonist ära\n#sellel juhul saan bonferroni korrektsiooni p-väärtuseks 0.05/24=0.00208\n\n#Boonusülesanne 1 (2 punkti) - usaldusintervallid kordajate jaoks\n#(1 boonuspunkt) Muuda funktsiooni estimate_significance selliselt, et iga \n#biomarkeri kordajale arvutad ka 95% usaldusintervalli. Võid kasutada \n#normaaljaotusel põhinevat lähendit ning arvutada selle \n#kordaja_hinnang +- 1.96 * SE, kus SE on summary(model) väljundis toodud\n#Std. Error. Funktsiooni tagastatavas andmetabelis peaksid nüüd olema ka \n#veerud lower ja upper.\n\nestimate_significance = function(formula0, biomarkers, data){\n    coefs=list()\n    pvalues=list()\n    upper=list()\n    lower=list()\n    for (i in 1:length(biomarkers)) {\n        formula = paste(formula0, biomarkers[i], sep=\" + \")\n        model = glm(formula, family=binomial, data=data)\n        summary_table = coef(summary(model))\n        pvalues[i] = summary_table[nrow(summary_table), 4]\n        coefs[i] = summary_table[nrow(summary_table), 1] \n        upper[i]=summary_table[nrow(summary_table), 1]+summary_table[nrow(summary_table), 2]*1.96\n        lower[i]=summary_table[nrow(summary_table), 1]-summary_table[nrow(summary_table), 2]*1.96\n        \n    }\n    pvalues=round(as.numeric(pvalues), 10)\n    coefs=round(as.numeric(coefs), 6)\n    upper=round(as.numeric(upper), 6)\n    lower=round(as.numeric(lower), 6)\n    tulemid=data.frame(biomarkers, pvalues, coefs, upper, lower)\n    return(tulemid)\n}\n\n#test\nproov=estimate_significance(formula0=\"s5 ~ sugu + vanusegrupp\", \n                      biomarkers=c(\"LDL_D\", \"HDL_C\"), data=biomarkerid)\n\nggplot(proov, aes(x=biomarkers, ymax=upper, ymin=lower, y=coefs))+\n    geom_pointrange(aes(fill=coefs), shape=21)+\n    guides(fill=FALSE)\n    \n#Ülesanne 9 (1 punkt) - forward selection\n#Artiklis on kirjeldatud mudeli koostamist järgnevalt:\n#For biomarker discovery in the Estonian Biobank cohort, a multivariate model \n#was derived in a forward stepwise fashion (Figure 2). First, the biomarker \n#leading to the smallest p-value in the model adjusted for age and sex only was \n#included as a predictor. Subsequently, the biomarker leading to the smallest \n#p-value in the multivariate model adjusted for age, sex, and the first \n#biomarker was included in the prediction model. The process was repeated until \n#no additional biomarkers were significant at the Bonferroni-corrected threshold\n#of p<0.0005, accounting for testing of 106 candidate biomarkers.\n#Eelmistes ülesannetes leidsid kõige olulisema p-väärtusega biomarkeri. \n#Jätka nüüd forward selection-iga:\n#Lisa leitud biomarker mudelisse ning lähtu mudelist s5 ~ sugu + vanusegrupp +\n#kõige_olulisem_biomarker\n#Kasuta funktsiooni estimate_significance ning leia nüüd järgmine biomarker, \n#mis mudelisse lisada. Jätka senikaua, kuni mudelisse lisatavad biomarkerite \n#p-väärtused on väiksemad kui sinu määratud piir.\n#Artiklis saadi sellise protsessi tulemusena 4 olulist biomarkerit: \n#Alb, VLDL_D, Gp, Cit. Kas said samasugused?\n#leaime väikseima p-väärtusega markeri\nesimene=estimate_significance(formula0=\"s5 ~ sugu + vanusegrupp\", \n                      biomarkers=names(biomarkerid)[6:111], data=biomarkerid)\nmarker1=esimene[order(esimene$pvalues),][1,1]\nteine=estimate_significance(formula0=\"s5 ~ sugu + vanusegrupp + Alb\", \n                              biomarkers=names(biomarkerid)[6:111], data=biomarkerid)\nmarker2=teine[order(teine$pvalues),][2,1]\nkolmas=estimate_significance(formula0=\"s5 ~ sugu + vanusegrupp + Alb + Gp\", \n                            biomarkers=names(biomarkerid)[6:111], data=biomarkerid)\nmarker3=kolmas[order(kolmas$pvalues),][2,1]\nneljas=estimate_significance(formula0=\"s5 ~ sugu + vanusegrupp + Alb + Gp + Cit\", \n                             biomarkers=names(biomarkerid)[6:111], data=biomarkerid)\nmarker4=neljas[order(neljas$pvalues),][2,1]\n\n\n#Ülesanne 10 (1 punkt) - surma tõenäosuse prognoosimine\n#Eelmise ülesande tulemusena on sul nüüd olemas lõplik mudel, mis võtab \n#arvesse kõik, mis on oluline surma tõenäosuse prognoosimiseks. Prognoosi \n#iga andmestikus oleva inimese kohta tema tõenäosust surra 5 aasta jooksul \n#ja visualiseeri tulemust (näiteks histogrammi abil).\n#Näpunäide: Uuri, mida teeb järgnev kood\nmodel = glm(s5 ~ sugu + vanusegrupp + Alb + Gp + Cit, \n            family=binomial, data=biomarkerid)\nnewdata = biomarkerid[,c(\"s5\", \"sugu\", \"vanusegrupp\", \"Alb\", \"Gp\", \"Cit\")]\n# On oluline, et newdata sisaldaks kindlasti kõik need veerud, mida on \n#vaja prognoosimisel\npredicted_probabilities = predict(model, newdata=newdata, type = \"response\")\nhist(predicted_probabilities)\n\n#Boonusülesanne 2 (2 punkti) - prognooside täpsus\n#Eelmises ülesandes prognoosisid surma tõenäosust. Aga mida hakkab tavainimene \n#peale tõenäosusega? Olgem ikka konkreetsed, kas siis sureb 5 aasta jooksul \n#või mitte.Selleks otsusta piir, millisest väiksemad tõenäosused klassifitseerid \n#ei sure ja suuremad tõenäosused sureb. Kasutades seda piiri ning eelmises\n#ülesandes kirjutatud funktsiooni, arvuta kõigi andmestikus olnud inimeste \n#jaoks 5 aasta jooksul suremise prognoos (justkui meil poleks olnud teada \n#tunnuse s5 väärtus).Milline on sinu prognooside täpsus (st kui suur osa \n#prognoosidest langes kokku tunnuse s5 väärtusega)?\n#teeme 0.5 peale\nproov=ifelse(predicted_probabilities<0.5, 0, 1)\nvordlus=data.frame(biomarkerid$s5, proov)\n#kui palju ma puusse panin\nsummary(factor(vordlus$biomarkerid.s5-vordlus$proov)) #pole paha, 4.158% viga\n#kui palju surnute osas puusse panin\nsurnud=subset(vordlus, biomarkerid.s5==1)\nsummary(factor(surnud$biomarkerid.s5-surnud$proov)) #väga perses mudel\n#teeme confusionmatrixi\nlibrary(caret)\nconfusionMatrix(vordlus$proov, biomarkerid$s5)\n#Võrdlusmomendi saamiseks paku välja veel mingi teine, naiivne \n#klassifitseerija (see võib põhineda ükskõik kui lihtsal reeglil). \n#Milline on selle täpsus?\n#kõige lihtsam, kuna surijaid oli vähe, ennustan kõigile, et jäävad elama\nnaive=data.frame(rep.int(0, length(vordlus$proov)))\nnaive$s5=biomarkerid$s5\nsummary(factor(naive$s5-naive$rep.int.0..length.vordlus.proov..)) #4,4% viga\n\n",
    "created" : 1433614602271.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "881576127",
    "id" : "C7E0026F",
    "lastKnownWriteTime" : 1433788785,
    "path" : "~/Minu asjad/Statistika, mudelid, excel/R/Andmeteadus_TU/VII praktikum/praktikum7.R",
    "project_path" : "praktikum7.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}