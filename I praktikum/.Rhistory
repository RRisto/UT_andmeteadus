andmed=read.csv("aktsiad-1")
andmed=read.csv("aktsiad-1.csv")
View(andmed)
andmed=read.csv("aktsiad-1.csv", sep=";")
andmed=read.csv("aktsiad-1.csv", sep=" ; ")
andmed=read.csv("aktsiad-1.csv", sep=";")
View(andmed)
andmed=read.csv("aktsiad-1.csv", sep=";")
andmed=read.csv("aktsiad-1.csv")
View(andmed)
andmed=read.csv2("aktsiad-1.csv")
View(andmed)
andmed=read.csv2("aktsiad-1.csv", sep=";")
View(andmed)
andmed=read.csv2("aktsiad-1.csv", sep=";")
andmed=read.csv2("aktsiad-1.csv", sep=",")
View(andmed)
andmed=read.csv("aktsiad-1.csv", sep=";", stringsAsFactors =F)
View(andmed)
andmed=read.csv("aktsiad-1.csv", sep=";", dec=".")
View(andmed)
andmed=read.csv2("aktsiad-1.csv", sep=";", dec=".")
andmed=read.csv2("aktsiad.csv", sep=";")
View(andmed)
library(dplyr)
andmed_arrnage=arrange(andmed, tootlus)
View(andmed_arrnage)
andmed_arrange=arrange(andmed, tootlus)
View(andmed_arrnage)
View(andmed_arrange)
andmed_arrange=arrange(andmed, desc(tootlus))
View(andmed_arrange)
parim_tootlus=andmed %>%
select(symbol,nimi, tootlus)%>%
arrange(desc(tootlus))%>%
head(3)
View(parim_tootlus)
mutate(andmed,
kaive=hind*kogus)
mutate(andmed,
kaive=hind*kogus, na.rm=T)
andmed2=mutate(andmed, kaive=hind*kogus, na.rm=T)
andmed2=mutate(andmed, kaive=hind*kogus)
View(andmed2)
class(andmed$hind)
andmed$hind=as.numeric(as.character(andmed$hind))
andmed2=mutate(andmed, kaive=hind*kogus)
View(andmed2)
sektori_grupp=group_by(andmed2, sektor)
View(sektori_grupp)
sektori_loikes <- summarise(sektori_grupp,
keskmine_tootlus=mean(tootlus, na.rm=T),
kogukaive=sum(kaive, na.rm=T),
keskmine_kaive=mean(kaive),
ettevotete_arv=count(n))
sektori_loikes <- summarise(sektori_grupp,
keskmine_tootlus=mean(tootlus, na.rm=T),
kogukaive=sum(kaive, na.rm=T),
keskmine_kaive=mean(kaive),
ettevotete_arv=n())
View(sektori_loikes)
sektori_loikes <- summarise(sektori_grupp,
keskmine_tootlus=mean(tootlus, na.rm=T),
kogukaive=sum(kaive, na.rm=T),
keskmine_kaive=mean(kaive, na.rm=T),
ettevotete_arv=n())
View(sektori_loikes)
sektori_loikes=select(sektori_loikes, ettevotete_arv=>30)
sektori_loikes=filter(sektori_loikes, ettevotete_arv=>30)
sektori_loikes=filter(sektori_loikes, ettevotete_arv>=30)
View(sektori_loikes)
andmed=mutate(andmed,
kasum_aktsiahinna_suhe=kasum_aktsia_kohta/hind,
dividendi_maar=dividend_aktsia_kohta/hind)
str(andmed)
andmed$kasum_aktsia_kohta=as.numeric(as.character(andmed$kasum_aktsia_kohta))
andmed$dividend_aktsia_kohta=as.numeric(as.character(andmed$dividend_aktsia_kohta))
andmed=mutate(andmed,
kasum_aktsiahinna_suhe=kasum_aktsia_kohta/hind,
dividendi_maar=dividend_aktsia_kohta/hind)
View(andmed)
andmed=mutate(andmed, atraktiivsus_skoor=0.5*kasum_aktsiahinna_suhe+0.5*dividendi_maar)
View(andmed)
arrange(andmed, atraktiivsus_skoor)
andmed=arrange(andmed, atraktiivsus_skoor)
View(andmed)
andmed=arrange(andmed, desc(atraktiivsus_skoor))
View(andmed)
andmed$symbol [3]
andmed$symbol [1:3]
andmed2=andmed
andmed2=filter(andmed2, symbol %in% c("AAPL", "FB", "GOOG", "IBM", "TSLA"))
kauplemisalgoritm(andmed2)
kauplemisalgoritm = function(x){
x$kasum_aktsia_kohta=as.numeric(as.character(x$kasum_aktsia_kohta))
x$dividend_aktsia_kohta=as.numeric(as.character(x$dividend_aktsia_kohta))
#arvutame juurde vajalikud muutujad
x=mutate(x,
kasum_aktsiahinna_suhe=kasum_aktsia_kohta/hind,
dividendi_maar=dividend_aktsia_kohta/hind)
x=mutate(x, atraktiivsus_skoor=0.5*kasum_aktsiahinna_suhe+0.5*dividendi_maar)
x=arrange(x, desc(atraktiivsus_skoor))
x$symbol [1:3]
}
kauplemisalgoritm(andmed2)
library(quantmod)
yahooQF()
data=getQuote(src = "yahoo")
data=getQuote(Symbol,src = "yahoo")
data=getQuote(symbol,src = "yahoo")
data=getQuote(Symbols,src = "yahoo")
symbols=unique(andmed$symbol)
data=getQuote(symbols,src = "yahoo")
class(symbols)
symbols=as.character(symbols'')
symbols=as.character(symbols)
data=getQuote(symbols,src = "yahoo")
View(data)
yahooQF()
data=getQuote(symbols,src = "yahoo",what=yahooQF(c("Last Trade (Price Only)","Symbol","Volume", "Earnings/Share", "Dividend/Share")))
View(data)
andmed_select=select(andmed, symbol, nimi, sektor, aktsiate_arv)
View(andmed_select)
View(andmed_select)
View(data)
andmed_merge=merge(andmed_select, data, by.x=symbol, by.y=Symbol)
andmed_merge=merge(andmed_select, data, by=symbol)
names(data)=lowercase(names(data))
andmed_merge=merge(andmed_select, data, by=symbol)
View(data)
names(data)=lower(names(data))
names(data)=tolower(names(data))
andmed_merge=merge(andmed_select, data, by=symbol)
View(data)
View(andmed)
data=getQuote(symbols,src = "yahoo",what=yahooQF(c("Last Trade (Price Only)","Symbol","Volume", "Earnings/Share", "Dividend/Share")))
View(andmed)
View(andmed_select)
andmed_merge=merge(andmed_select, data, by="symbol")
rownames(data)=0
andmed_merge=merge(andmed_select, data, by="symbol")
rownames(data)=NULL
andmed_merge=merge(andmed_select, data, by="symbol")
View(data)
names(data)
names(data)=tolower(names(data))
names(data)
andmed_merge=merge(andmed_select, data, by="symbol")
View(andmed_merge)
andmed_yahoost = function(algfail){
#võtame symbolid, mille kohta infot tõmmata
symbols=unique(algfail$symbol)
symbols=as.character(symbols)
#tõmbame andmed yahoost
data=getQuote(symbols,src = "yahoo",
what=yahooQF(c("Last Trade (Price Only)",
"Symbol","Volume",
"Earnings/Share",
"Dividend/Share")))
#võtame algfailist ainult vajalikud andmed
andmed_select=select(algfail, symbol, nimi, sektor, aktsiate_arv)
#väiketähtdeks columnite nimed (vaja et kokku mergida)
names(data)=tolower(names(data))
#mergime kokku
andmed_merge=merge(andmed_select, data, by="symbol")
return andmed_merge
}
andmed_yahoost = function(algfail){
library(dplyr)
#võtame symbolid, mille kohta infot tõmmata
symbols=unique(algfail$symbol)
symbols=as.character(symbols)
#tõmbame andmed yahoost
data=getQuote(symbols,src = "yahoo",
what=yahooQF(c("Last Trade (Price Only)",
"Symbol","Volume",
"Earnings/Share",
"Dividend/Share")))
#võtame algfailist ainult vajalikud andmed
andmed_select=select(algfail, symbol, nimi, sektor, aktsiate_arv)
#väiketähtdeks columnite nimed (vaja et kokku mergida)
names(data)=tolower(names(data))
#mergime kokku
andmed_merge=merge(andmed_select, data, by="symbol")
andmed_merge
}
proov=andmed_yahoost(andmed)
View(proov)
View(proov)
andmed_yahoost = function(algfail){
library(dplyr)
#võtame symbolid, mille kohta infot tõmmata
symbols=unique(algfail$symbol)
symbols=as.character(symbols)
#tõmbame andmed yahoost
data=getQuote(symbols,src = "yahoo",
what=yahooQF(c("Last Trade (Price Only)",
"Symbol","Change in Percent",
"Volume",
"Earnings/Share",
"Dividend/Share")))
#võtame algfailist ainult vajalikud andmed
andmed_select=select(algfail, symbol, nimi, sektor, aktsiate_arv)
#väiketähtdeks columnite nimed (vaja et kokku mergida)
names(data)=tolower(names(data))
#mergime kokku
andmed_merge=merge(andmed_select, data, by="symbol")
andmed_merge
}
proov=andmed_yahoost(andmed)
View(proov)
proov2=rename(proov, % change=tootlus)
proov2=rename(proov, "% change"=tootlus)
proov2=rename(proov, tootlus="% change")
proov2=rename(proov, tootlus=% change)
names(proov)
View(andmed)
names(proov)=c("symbol", "nimi", "sektor","aktsiate_arv", "trade time", "hind",
"tootlus", "kogus", "kasum_aktsia_kohta","dividend_aktsia_kohta")
View(proov)
class(proov$tootlus)
proov3=proov
gsub("+","", proov3$tootlus)
gsub("\\+","", proov3$tootlus)
gsub("\\-","", proov3$tootlus)
gsub("\\%","", proov3$tootlus)
proov$tootlus=gsub("\\+","", proov3$tootlus)
proov$tootlus=gsub("\\-","", proov3$tootlus)
proov$tootlus=gsub("\\%","", proov3$tootlus)
proov$tootlus
proov$tootlus=gsub("\\+","", proov$tootlus)
proov$tootlus=gsub("\\-","", proov$tootlus)
proov$tootlus=gsub("\\%","", proov$tootlus)
proov$tootlus
proov$tootlus=as.numeric(as.character(proov$tootlus))
View(proov)
View(proov)
class(proov$hind)
#teeme hinna factorist numericuks
proov$hind=as.numeric(as.character(proov$hind))
class(proov$hind)
View(proov)
class(proov$kogus)
